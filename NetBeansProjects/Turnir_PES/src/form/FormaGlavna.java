/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import domen.Igrac;
import domen.Klub;
import domen.Liga;
import domen.Statistika;
import domen.Turnir;
import domen.Ucesnik;
import domen.Utakmica;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import kontroler.Kontroler;
import modeliTabela.ModelTabelaStatistikeIgraca;
import modeliTabela.ModelTabeleIgracaZaTurnir;
import modeliTabela.ModelTabeleListaTurnira;
import modeliTabela.ModelTabeleListaUtakmica;
import modeliTabela.ModelTabeleTabelaBodova;

/**
 *
 * @author Dule
 */
public class FormaGlavna extends javax.swing.JFrame {

    modeliTabela.ModelTabeleIgracaZaTurnir mtizt = new ModelTabeleIgracaZaTurnir();
    modeliTabela.ModelTabeleListaTurnira mtt = new ModelTabeleListaTurnira();
    modeliTabela.ModelTabeleTabelaBodova mtb = new ModelTabeleTabelaBodova();
    modeliTabela.ModelTabeleListaUtakmica mtlu = new ModelTabeleListaUtakmica();
    modeliTabela.ModelTabeleIgracaZaTurnir mtizt2 = new ModelTabeleIgracaZaTurnir();

    /**
     * Creates new form FormaGlavna
     */
    public FormaGlavna() {
        initComponents();
        this.setSize(1550, 1000);
        ucitajModeleTabela();

        ucitajPanel();
        ucitajMiSveKlubove();
        ucitajMiSveIgrace();
        ucitajMiSveLige();
        ucitajModelTabele();
        ulepsajTabele();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTabelaTurniri = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaUtakmica = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaTabela = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaTurnira = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabelaUcesnika = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnSacuvaj = new javax.swing.JButton();
        panelNapraviTurnir = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaIgracaNaTurniru = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cmbIgrac = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cmbKlub = new javax.swing.JComboBox();
        btnKreirajTurnir = new javax.swing.JButton();
        btnDodajIgracaZaTurnir = new javax.swing.JButton();
        btnObrisiIgracaIzListeZaTurnir = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtNazivTurnira = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        txtNadimak = new javax.swing.JTextField();
        btnNapraviIgraca = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtImeKluba = new javax.swing.JTextField();
        btnNapraviKlub = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        spinerBrojZvezdica = new javax.swing.JSpinner();
        cmbLiga = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        panelStatistikaIgraca = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaStatistika = new javax.swing.JTable();
        cmbIgracStatistika = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblPrimljeni = new javax.swing.JLabel();
        lblDatiGolovi = new javax.swing.JLabel();
        lblIzgubljene = new javax.swing.JLabel();
        lblNeresene = new javax.swing.JLabel();
        lblLicnePobede = new javax.swing.JLabel();
        btnNapraviTabeluMeni = new javax.swing.JButton();
        cmbTabeleMeni = new javax.swing.JButton();
        btnStatistikaMeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        panelTabelaTurniri.setLayout(null);

        tabelaUtakmica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaUtakmica.setSelectionBackground(new java.awt.Color(102, 102, 255));
        jScrollPane2.setViewportView(tabelaUtakmica);

        panelTabelaTurniri.add(jScrollPane2);
        jScrollPane2.setBounds(20, 60, 570, 330);

        tabelaTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabelaTabela);

        panelTabelaTurniri.add(jScrollPane3);
        jScrollPane3.setBounds(20, 460, 570, 130);

        tabelaTurnira.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaTurnira.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaTurniraMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabelaTurnira);

        panelTabelaTurniri.add(jScrollPane4);
        jScrollPane4.setBounds(1020, 50, 350, 380);

        jLabel11.setText("Tabela:");
        panelTabelaTurniri.add(jLabel11);
        jLabel11.setBounds(20, 430, 280, 30);

        jLabel12.setText("Lista utakmica:");
        panelTabelaTurniri.add(jLabel12);
        jLabel12.setBounds(20, 20, 140, 30);

        jLabel13.setText("Lista turnira");
        panelTabelaTurniri.add(jLabel13);
        jLabel13.setBounds(1020, 20, 180, 16);

        tabelaUcesnika.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaUcesnika.setSelectionForeground(new java.awt.Color(102, 204, 255));
        tabelaUcesnika.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane6.setViewportView(tabelaUcesnika);

        panelTabelaTurniri.add(jScrollPane6);
        jScrollPane6.setBounds(610, 60, 390, 130);

        jLabel14.setText("Igraci:");
        panelTabelaTurniri.add(jLabel14);
        jLabel14.setBounds(610, 30, 70, 20);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        panelTabelaTurniri.add(jSeparator1);
        jSeparator1.setBounds(1010, 20, 20, 430);

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });
        panelTabelaTurniri.add(btnSacuvaj);
        btnSacuvaj.setBounds(420, 410, 170, 32);

        getContentPane().add(panelTabelaTurniri);
        panelTabelaTurniri.setBounds(10, 33, 1480, 950);

        panelNapraviTurnir.setLayout(null);

        tabelaIgracaNaTurniru.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaIgracaNaTurniru);

        jLabel1.setText("Igrac:");

        cmbIgrac.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Tim:");

        cmbKlub.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnKreirajTurnir.setText("Napravi turnir");
        btnKreirajTurnir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajTurnirActionPerformed(evt);
            }
        });

        btnDodajIgracaZaTurnir.setText("Dodaj");
        btnDodajIgracaZaTurnir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajIgracaZaTurnirActionPerformed(evt);
            }
        });

        btnObrisiIgracaIzListeZaTurnir.setText("Obrisi");
        btnObrisiIgracaIzListeZaTurnir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiIgracaIzListeZaTurnirActionPerformed(evt);
            }
        });

        jLabel10.setText("Naziv turnira:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnObrisiIgracaIzListeZaTurnir, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDodajIgracaZaTurnir, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnKreirajTurnir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNazivTurnira, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cmbIgrac, 0, 158, Short.MAX_VALUE)
                                .addComponent(cmbKlub, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbIgrac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbKlub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajIgracaZaTurnir)
                    .addComponent(btnObrisiIgracaIzListeZaTurnir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(txtNazivTurnira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnKreirajTurnir)
                .addContainerGap())
        );

        panelNapraviTurnir.add(jPanel1);
        jPanel1.setBounds(6, 6, 500, 348);

        jLabel3.setText("Ime:");

        jLabel4.setText("Prezime:");

        jLabel5.setText("Nadimak:");

        btnNapraviIgraca.setText("Napravi igraca");
        btnNapraviIgraca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNapraviIgracaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNadimak, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(btnNapraviIgraca, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNadimak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNapraviIgraca)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelNapraviTurnir.add(jPanel2);
        jPanel2.setBounds(532, 6, 344, 152);

        jLabel7.setText("Ime kluba:");

        btnNapraviKlub.setText("Napravi klub");
        btnNapraviKlub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNapraviKlubActionPerformed(evt);
            }
        });

        jLabel6.setText("Broj zvezdica");

        spinerBrojZvezdica.setModel(new javax.swing.SpinnerNumberModel(3.0d, 0.5d, 5.0d, 0.5d));

        cmbLiga.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("Liga:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(60, 60, 60)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnNapraviKlub, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))
                    .addComponent(cmbLiga, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtImeKluba)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(spinerBrojZvezdica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtImeKluba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbLiga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinerBrojZvezdica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNapraviKlub)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        panelNapraviTurnir.add(jPanel3);
        jPanel3.setBounds(512, 170, 364, 138);

        getContentPane().add(panelNapraviTurnir);
        panelNapraviTurnir.setBounds(12, 37, 1480, 950);

        panelStatistikaIgraca.setLayout(null);

        tabelaStatistika.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(tabelaStatistika);
        tabelaStatistika.setRowHeight(25);
        tabelaStatistika.setFocusable(false);
        tabelaStatistika.setShowVerticalLines(false);

        tabelaStatistika.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        tabelaStatistika.getTableHeader().setOpaque(false);
        tabelaStatistika.getTableHeader().setBackground(new Color(32, 136, 203));
        tabelaStatistika.getTableHeader().setForeground(new Color(255, 255, 255));
        tabelaStatistika.setRowHeight(25);

        panelStatistikaIgraca.add(jScrollPane5);
        jScrollPane5.setBounds(6, 74, 858, 217);

        cmbIgracStatistika.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbIgracStatistika.setSelectedIndex(-1);
        cmbIgracStatistika.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbIgracStatistikaItemStateChanged(evt);
            }
        });
        panelStatistikaIgraca.add(cmbIgracStatistika);
        cmbIgracStatistika.setBounds(197, 36, 273, 26);

        jLabel8.setText("Igrac:");
        panelStatistikaIgraca.add(jLabel8);
        jLabel8.setBounds(6, 39, 173, 20);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setText("LICNA STATISTIKA:");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 40));

        jLabel16.setText("Pobede:");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 120, 40));

        jLabel17.setText("Neresene:");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 150, 40));

        jLabel18.setText("Izgubljene:");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 80, 40));

        jLabel19.setText("Dati golovi:");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 150, 40));

        jLabel20.setText("Primljeni golovi:");
        jPanel4.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 140, 40));
        jPanel4.add(lblPrimljeni, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 140, 40));
        jPanel4.add(lblDatiGolovi, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, 150, 40));
        jPanel4.add(lblIzgubljene, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 80, 40));
        jPanel4.add(lblNeresene, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 150, 40));
        jPanel4.add(lblLicnePobede, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 120, 40));

        panelStatistikaIgraca.add(jPanel4);
        jPanel4.setBounds(190, 320, 600, 390);

        getContentPane().add(panelStatistikaIgraca);
        panelStatistikaIgraca.setBounds(6, 35, 1480, 950);

        btnNapraviTabeluMeni.setText("Kreiraj Turnir");
        btnNapraviTabeluMeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNapraviTabeluMeniActionPerformed(evt);
            }
        });
        getContentPane().add(btnNapraviTabeluMeni);
        btnNapraviTabeluMeni.setBounds(0, 0, 120, 32);

        cmbTabeleMeni.setText("Tabela");
        cmbTabeleMeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTabeleMeniActionPerformed(evt);
            }
        });
        getContentPane().add(cmbTabeleMeni);
        cmbTabeleMeni.setBounds(111, 0, 110, 32);

        btnStatistikaMeni.setText("Statistika");
        btnStatistikaMeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatistikaMeniActionPerformed(evt);
            }
        });
        getContentPane().add(btnStatistikaMeni);
        btnStatistikaMeni.setBounds(205, 1, 120, 31);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajIgracaZaTurnirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajIgracaZaTurnirActionPerformed
        Igrac i = (Igrac) cmbIgrac.getSelectedItem();
        Klub k = (Klub) cmbKlub.getSelectedItem();
        Ucesnik u = new Ucesnik(-1, i, null, k, mtizt.getRowCount() + 1);
        mtizt.dodajUcesnika(u);
    }//GEN-LAST:event_btnDodajIgracaZaTurnirActionPerformed

    private void btnObrisiIgracaIzListeZaTurnirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiIgracaIzListeZaTurnirActionPerformed
        int broj = tabelaIgracaNaTurniru.getSelectedRow();
        if (broj == -1) {
            JOptionPane.showMessageDialog(this, "Selektujte igraca koji zelite da obrisete!");
            return;
        }
        Ucesnik u = mtizt.getLista().get(broj);
        mtizt.obirisIzTabele(u);
    }//GEN-LAST:event_btnObrisiIgracaIzListeZaTurnirActionPerformed

    private void btnKreirajTurnirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajTurnirActionPerformed
        ArrayList<Ucesnik> listaUcesnika = (ArrayList<Ucesnik>) mtizt.getLista();
        String naziv = txtNazivTurnira.getText();
        if (naziv.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Popunite polje naziv turnira!");
            return;
        }
        int maxID = Kontroler.getInstance().vratiMiZaTurnirID();
        Date d = new Date();
        Turnir t = new Turnir(maxID, naziv, d);
        txtNazivTurnira.setText("");
        boolean uspesnoTurnir = Kontroler.getInstance().napraviTurnir(t);
        for (Ucesnik ucesnik : listaUcesnika) {
            ucesnik.setTurnir(t);
        }
        boolean uspesnoUcesnici = Kontroler.getInstance().unesiUcesnike(listaUcesnika);
        if (uspesnoUcesnici) {
            listaUcesnika = Kontroler.getInstance().vratMiSveUcesnikeTurnira(t);
        }
        ArrayList<Utakmica> listaUtakmica = napraviUtakmice(listaUcesnika);
        //izbrisi posle
        for (Utakmica utakmica : listaUtakmica) {
            System.out.println(utakmica.toString());
        }
        for (Ucesnik ucesnikGlavni : listaUcesnika) {
            for (Ucesnik ucesnikSporedni : listaUcesnika) {
                if (ucesnikGlavni != ucesnikSporedni) {
                    Statistika stat = Kontroler.getInstance().vratiMiStatistiku(ucesnikGlavni, ucesnikSporedni);
                    if (stat == null) {
                        boolean uspesno = Kontroler.getInstance().napraviStatistiku(new Statistika(ucesnikGlavni.getIgrac(), ucesnikSporedni.getIgrac(), 0, 0, 0, 0, 0));
                        if (!uspesno) {
                            JOptionPane.showMessageDialog(this, "Problem sa unosom statistike!");
                            return;
                        }
                    }
                }
            }
        }

        boolean uspesnoUtakmice = Kontroler.getInstance().unesiUtakmice(listaUtakmica, t);
        if (uspesnoTurnir && uspesnoUcesnici && uspesnoUtakmice) {
            JOptionPane.showMessageDialog(this, "Uspesno napravljen turnir!");
        } else {
            JOptionPane.showMessageDialog(this, "GRESKA!");
        }
        mtizt.obrisiTabelu();

    }//GEN-LAST:event_btnKreirajTurnirActionPerformed

    private void btnNapraviIgracaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNapraviIgracaActionPerformed
        String ime = txtIme.getText();
        String prezime = txtPrezime.getText();
        String nadimak = txtNadimak.getText();
        int maxid = Kontroler.getInstance().vratiMiMaxIdZaIgraca();
        Igrac i = new Igrac(maxid, ime, prezime, nadimak);
        txtIme.setText("");
        txtPrezime.setText("");
        txtNadimak.setText("");
        boolean uspesno = Kontroler.getInstance().unesiIgraca(i);
        if (uspesno) {
            JOptionPane.showMessageDialog(this, "Uspesno napravljen igrac!");
            cmbIgrac.addItem(i);
            Igrac isporedni = new Igrac();
            isporedni.setId(-1);
            Statistika s = new Statistika(i, isporedni, 0, 0, 0, 0, 0);
            boolean uspesnoStatistika = Kontroler.getInstance().unesiStatistiku(s);
            if (uspesnoStatistika) {
                return;
            }
            JOptionPane.showMessageDialog(this, "GRESKA! \nStatistika!");
        }
        JOptionPane.showMessageDialog(this, "GRESKA! \nIgrac!");
    }//GEN-LAST:event_btnNapraviIgracaActionPerformed

    private void btnNapraviKlubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNapraviKlubActionPerformed
        String naziv = txtImeKluba.getText();
        Liga l = (Liga) cmbLiga.getSelectedItem();
        double brojZvezdica = (double) spinerBrojZvezdica.getValue();
        int maxid = Kontroler.getInstance().vratiMiMaxIdZaKlubove();
        Klub k = new Klub(maxid, naziv, l, brojZvezdica);
        txtImeKluba.setText("");
        boolean uspesno = Kontroler.getInstance().unesiKlub(k);
        if (uspesno) {
            JOptionPane.showMessageDialog(this, "Uspesno napravljen klub!");
            cmbKlub.addItem(k);
            return;
        }
        JOptionPane.showMessageDialog(this, "GRESKA!");

    }//GEN-LAST:event_btnNapraviKlubActionPerformed

    private void btnNapraviTabeluMeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNapraviTabeluMeniActionPerformed
        panelNapraviTurnir.setVisible(true);
        panelStatistikaIgraca.setVisible(false);
        panelTabelaTurniri.setVisible(false);
    }//GEN-LAST:event_btnNapraviTabeluMeniActionPerformed

    private void cmbTabeleMeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTabeleMeniActionPerformed
        panelNapraviTurnir.setVisible(false);
        panelStatistikaIgraca.setVisible(false);
        panelTabelaTurniri.setVisible(true);
        ucitajTurnire();
    }//GEN-LAST:event_cmbTabeleMeniActionPerformed

    private void btnStatistikaMeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatistikaMeniActionPerformed
        panelNapraviTurnir.setVisible(false);
        panelStatistikaIgraca.setVisible(true);
        panelTabelaTurniri.setVisible(false);
    }//GEN-LAST:event_btnStatistikaMeniActionPerformed

    private void tabelaTurniraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaTurniraMouseClicked
        int broj = tabelaTurnira.getSelectedRow();
        Turnir turnir = mtt.getLista().get(broj);
        ArrayList<Utakmica> listaUtakmica = Kontroler.getInstance().vratiMiSveUtakmiceTurnira(turnir);
        mtlu.setLista(listaUtakmica);
        ArrayList<Ucesnik> listaUcesnika = Kontroler.getInstance().vratMiSveUcesnikeTurnira(turnir);
        mtizt2.setLista(listaUcesnika);
        mtb.setListaUtakmica(listaUtakmica);
        mtb.setListaUcesnika(listaUcesnika);
    }//GEN-LAST:event_tabelaTurniraMouseClicked

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        ArrayList<Utakmica> lista = (ArrayList<Utakmica>) mtlu.getLista();
        // ArrayList<Igrac> listaIgraca = vratiMiListuIgraca(lista);
        //ArrayList<Statistika> listaStatistike=vratiMiListuStatistika(lista,listaIgraca)
        boolean izmeniListu = Kontroler.getInstance().sacuvajRezultateUtakmice(lista);
        if (izmeniListu) {
            JOptionPane.showMessageDialog(this, "Uspesno!");
            pokupiRezultate(lista);
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void cmbIgracStatistikaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbIgracStatistikaItemStateChanged
        ModelTabelaStatistikeIgraca mtsi = new ModelTabelaStatistikeIgraca();
        Igrac i = (Igrac) cmbIgracStatistika.getSelectedItem();
        ArrayList<Statistika> lista = Kontroler.getInstance().vratiMiSveStatistikeZaIgraca(i);
        Statistika licna = new Statistika();
        licna = lista.get(0);
        lista.remove(0);
        mtsi.setLista(lista);
        tabelaStatistika.setModel(mtsi);
        lblDatiGolovi.setText(licna.getUkupnoDatihGolova() + "");
        lblPrimljeni.setText(licna.getUkupnoPrimljenihGolova() + "");
        lblLicnePobede.setText(licna.getUkupnoPobeda() + "");
        lblNeresene.setText(licna.getUkupnoNeresenih() + "");
        lblIzgubljene.setText(licna.getUkupnoIzgubljenih() + "");
        //lblUkupnoOdigranih.setText(licna.getUkupnoIzgubljenih() + licna.getUkupnoNeresenih() + licna.getUkupnoPobeda() + "");

    }//GEN-LAST:event_cmbIgracStatistikaItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaGlavna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaGlavna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaGlavna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaGlavna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormaGlavna().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajIgracaZaTurnir;
    private javax.swing.JButton btnKreirajTurnir;
    private javax.swing.JButton btnNapraviIgraca;
    private javax.swing.JButton btnNapraviKlub;
    private javax.swing.JButton btnNapraviTabeluMeni;
    private javax.swing.JButton btnObrisiIgracaIzListeZaTurnir;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JButton btnStatistikaMeni;
    private javax.swing.JComboBox cmbIgrac;
    private javax.swing.JComboBox cmbIgracStatistika;
    private javax.swing.JComboBox cmbKlub;
    private javax.swing.JComboBox cmbLiga;
    private javax.swing.JButton cmbTabeleMeni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDatiGolovi;
    private javax.swing.JLabel lblIzgubljene;
    private javax.swing.JLabel lblLicnePobede;
    private javax.swing.JLabel lblNeresene;
    private javax.swing.JLabel lblPrimljeni;
    private javax.swing.JPanel panelNapraviTurnir;
    private javax.swing.JPanel panelStatistikaIgraca;
    private javax.swing.JPanel panelTabelaTurniri;
    private javax.swing.JSpinner spinerBrojZvezdica;
    private javax.swing.JTable tabelaIgracaNaTurniru;
    private javax.swing.JTable tabelaStatistika;
    private javax.swing.JTable tabelaTabela;
    private javax.swing.JTable tabelaTurnira;
    private javax.swing.JTable tabelaUcesnika;
    private javax.swing.JTable tabelaUtakmica;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtImeKluba;
    private javax.swing.JTextField txtNadimak;
    private javax.swing.JTextField txtNazivTurnira;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private void ucitajPanel() {
        panelNapraviTurnir.setVisible(true);
        panelStatistikaIgraca.setVisible(false);
        panelTabelaTurniri.setVisible(false);
    }

    private void ucitajMiSveKlubove() {
        cmbKlub.removeAllItems();
        ArrayList<Klub> klubovi = Kontroler.getInstance().vratiMiSveKlubove();
        for (Klub klub : klubovi) {
            cmbKlub.addItem(klub);
        }
    }

    private void ucitajMiSveIgrace() {
        cmbIgrac.removeAllItems();
        cmbIgracStatistika.removeAllItems();
        ArrayList<Igrac> igraci = Kontroler.getInstance().vratiMiSveIgrace();
        for (Igrac igrac : igraci) {
            cmbIgrac.addItem(igrac);
            cmbIgracStatistika.addItem(igrac);
        }
    }

    private void ucitajMiSveLige() {
        cmbLiga.removeAllItems();
        ArrayList<Liga> lige = Kontroler.getInstance().vratiMiSveLige();
        for (Liga liga : lige) {
            cmbLiga.addItem(liga);
        }
    }

    private void ucitajModelTabele() {
        tabelaIgracaNaTurniru.setModel(mtizt);
    }

    private void ucitajTurnire() {
        ArrayList<Turnir> lista = kontroler.Kontroler.getInstance().vratiMiSveTurnire();
        tabelaTurnira.setModel(mtt);
        mtt.setLista(lista);
        mtt.fireTableDataChanged();
    }

    private ArrayList<Utakmica> napraviUtakmice(ArrayList<Ucesnik> listaUcesnika) {
        ArrayList<Utakmica> trazenaLista = new ArrayList<>();
        for (Ucesnik ucesnik : listaUcesnika) {
            for (Ucesnik ucesnik2 : listaUcesnika) {
                if (!ucesnik.equals(ucesnik2)) {
                    Utakmica u = new Utakmica(ucesnik, ucesnik2, new Date());
                    Utakmica u2 = new Utakmica(ucesnik2, ucesnik, new Date());
                    if (!daLiPostojiUListiUtakmice(u, trazenaLista)) {
                        trazenaLista.add(u);
                    }
                    if (!daLiPostojiUListiUtakmice(u2, trazenaLista)) {
                        trazenaLista.add(u2);
                    }
                }
            }
        }
        return trazenaLista;
    }

    private boolean daLiPostojiUListiUtakmice(Utakmica u, ArrayList<Utakmica> trazenaLista) {
        for (Utakmica utakmica : trazenaLista) {
            if (u.getDomacin().equals(utakmica.getDomacin()) && u.getGost().equals(utakmica.getGost())) {
                return true;
            }
        }
        return false;
    }

    private void ucitajModeleTabela() {
        tabelaTabela.setModel(mtb);
        tabelaUtakmica.setModel(mtlu);
        tabelaUcesnika.setModel(mtizt2);
        tabelaStatistika.setModel(mtizt);
    }

    private void pokupiRezultate(ArrayList<Utakmica> lista) {
        ArrayList<Ucesnik> listaUcesnika = (ArrayList<Ucesnik>) mtizt2.getLista();
        mtb.setListaUcesnika(listaUcesnika);
        mtb.setListaUtakmica(lista);
    }

//    private ArrayList<Igrac> vratiMiListuIgraca(ArrayList<Utakmica> lista) {
//        ArrayList<Igrac> listaIgraca = new ArrayList<>();
//        for (Utakmica utakmica : lista) {
//            if (!listaIgraca.contains(utakmica.getDomacin())) {
//                listaIgraca.add(utakmica.getDomacin().getIgrac());
//            }
//            if (!listaIgraca.contains(utakmica.getGost())) {
//                listaIgraca.add(utakmica.getGost().getIgrac());
//            }
//        }
//        return listaIgraca;
//    }
    public void ulepsajTabelu(JTable tabela) {
        tabela.setFocusable(false);
        tabela.setShowVerticalLines(false);

        tabela.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        tabela.getTableHeader().setOpaque(false);
        tabela.getTableHeader().setBackground(new Color(32, 136, 203));
        tabela.getTableHeader().setForeground(new Color(255, 255, 255));
        tabela.setRowHeight(25);
    }

    private void ulepsajTabele() {
        /*
        tabela lista igraca koja igra turnir
         */
        ulepsajTabelu(tabelaIgracaNaTurniru);
        tabelaIgracaNaTurniru.getColumnModel().getColumn(0).setResizable(false);
        tabelaIgracaNaTurniru.getColumnModel().getColumn(2).setResizable(false);
        tabelaIgracaNaTurniru.getColumnModel().getColumn(0).setMinWidth(50);
        tabelaIgracaNaTurniru.getColumnModel().getColumn(0).setMaxWidth(50);
        tabelaIgracaNaTurniru.getColumnModel().getColumn(2).setMinWidth(200);
        tabelaIgracaNaTurniru.getColumnModel().getColumn(2).setMaxWidth(200);
        /*
        tabela statistike igraca
         */
        ulepsajTabelu(tabelaStatistika);
        tabelaStatistika.getColumnModel().getColumn(0).setResizable(false);
        tabelaStatistika.getColumnModel().getColumn(2).setResizable(false);
        tabelaStatistika.getColumnModel().getColumn(3).setResizable(false);
        tabelaStatistika.getColumnModel().getColumn(4).setResizable(false);
        tabelaStatistika.getColumnModel().getColumn(5).setResizable(false);
        tabelaStatistika.getColumnModel().getColumn(6).setResizable(false);
        tabelaStatistika.getColumnModel().getColumn(7).setResizable(false);
        tabelaStatistika.getColumnModel().getColumn(8).setResizable(false);
        tabelaStatistika.getColumnModel().getColumn(0).setMinWidth(50);
        tabelaStatistika.getColumnModel().getColumn(0).setMaxWidth(50);
        tabelaStatistika.getColumnModel().getColumn(2).setMinWidth(50);
        tabelaStatistika.getColumnModel().getColumn(2).setMaxWidth(50);
        tabelaStatistika.getColumnModel().getColumn(3).setMinWidth(50);
        tabelaStatistika.getColumnModel().getColumn(3).setMaxWidth(50);
        tabelaStatistika.getColumnModel().getColumn(4).setMinWidth(50);
        tabelaStatistika.getColumnModel().getColumn(4).setMaxWidth(50);
        tabelaStatistika.getColumnModel().getColumn(5).setMinWidth(50);
        tabelaStatistika.getColumnModel().getColumn(5).setMaxWidth(50);
        tabelaStatistika.getColumnModel().getColumn(6).setMinWidth(50);
        tabelaStatistika.getColumnModel().getColumn(6).setMaxWidth(50);
        tabelaStatistika.getColumnModel().getColumn(7).setMinWidth(50);
        tabelaStatistika.getColumnModel().getColumn(7).setMaxWidth(50);
        tabelaStatistika.getColumnModel().getColumn(8).setMinWidth(50);
        tabelaStatistika.getColumnModel().getColumn(8).setMaxWidth(50);
        /*
        tabela Tabela turnira
         */
        ulepsajTabelu(tabelaTabela);
        tabelaTabela.getColumnModel().getColumn(0).setResizable(false);
        tabelaTabela.getColumnModel().getColumn(1).setResizable(false);
        tabelaTabela.getColumnModel().getColumn(2).setResizable(false);
        tabelaTabela.getColumnModel().getColumn(3).setResizable(false);
        tabelaTabela.getColumnModel().getColumn(4).setResizable(false);
        tabelaTabela.getColumnModel().getColumn(5).setResizable(false);
        tabelaTabela.getColumnModel().getColumn(6).setResizable(false);
        tabelaTabela.getColumnModel().getColumn(7).setResizable(false);
        tabelaTabela.getColumnModel().getColumn(0).setMinWidth(50);
        tabelaTabela.getColumnModel().getColumn(0).setMaxWidth(50);
        tabelaTabela.getColumnModel().getColumn(2).setMinWidth(50);
        tabelaTabela.getColumnModel().getColumn(2).setMaxWidth(50);
        tabelaTabela.getColumnModel().getColumn(3).setMinWidth(50);
        tabelaTabela.getColumnModel().getColumn(3).setMaxWidth(50);
        tabelaTabela.getColumnModel().getColumn(4).setMinWidth(50);
        tabelaTabela.getColumnModel().getColumn(4).setMaxWidth(50);
        tabelaTabela.getColumnModel().getColumn(5).setMinWidth(50);
        tabelaTabela.getColumnModel().getColumn(5).setMaxWidth(50);
        tabelaTabela.getColumnModel().getColumn(6).setMinWidth(50);
        tabelaTabela.getColumnModel().getColumn(6).setMaxWidth(50);
        tabelaTabela.getColumnModel().getColumn(7).setMinWidth(50);
        tabelaTabela.getColumnModel().getColumn(7).setMaxWidth(50);
        ulepsajTabelu(tabelaTurnira);
        tabelaTurnira.getColumnModel().getColumn(0).setResizable(false);
        tabelaTurnira.getColumnModel().getColumn(2).setResizable(false);
        tabelaTurnira.getColumnModel().getColumn(0).setMinWidth(50);
        tabelaTurnira.getColumnModel().getColumn(0).setMaxWidth(50);
        tabelaTurnira.getColumnModel().getColumn(2).setMinWidth(150);
        tabelaTurnira.getColumnModel().getColumn(2).setMaxWidth(150);
        ulepsajTabelu(tabelaUcesnika);
        tabelaUcesnika.getColumnModel().getColumn(0).setResizable(false);
        tabelaUcesnika.getColumnModel().getColumn(2).setResizable(false);
        tabelaUcesnika.getColumnModel().getColumn(0).setMinWidth(50);
        tabelaUcesnika.getColumnModel().getColumn(0).setMaxWidth(50);
        tabelaUcesnika.getColumnModel().getColumn(2).setMinWidth(200);
        tabelaUcesnika.getColumnModel().getColumn(2).setMaxWidth(200);
        ulepsajTabelu(tabelaUtakmica);
        tabelaUtakmica.getColumnModel().getColumn(0).setResizable(false);
        tabelaUtakmica.getColumnModel().getColumn(2).setResizable(false);
        tabelaUtakmica.getColumnModel().getColumn(3).setResizable(false);
        tabelaUtakmica.getColumnModel().getColumn(0).setMinWidth(50);
        tabelaUtakmica.getColumnModel().getColumn(0).setMaxWidth(50);
        tabelaUtakmica.getColumnModel().getColumn(1).setMinWidth(200);
        tabelaUtakmica.getColumnModel().getColumn(1).setMaxWidth(250);
        tabelaUtakmica.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabelaUtakmica.getColumnModel().getColumn(2).setMinWidth(50);
        tabelaUtakmica.getColumnModel().getColumn(2).setMaxWidth(50);
        tabelaUtakmica.getColumnModel().getColumn(3).setMinWidth(50);
        tabelaUtakmica.getColumnModel().getColumn(3).setMaxWidth(50);
        tabelaUtakmica.getColumnModel().getColumn(4).setMinWidth(200);
        tabelaUtakmica.getColumnModel().getColumn(4).setMaxWidth(250);
    }
}
